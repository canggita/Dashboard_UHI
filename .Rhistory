names_to = "tahun",
values_to = "kepadatan"
) %>%
mutate(
tahun = as.integer(str_remove(tahun, "_mean"))
)
# ===============================================
# 4. Tambahkan Kolom trend Manual
# ===============================================
data_long1 <- data_long1 %>%
group_by(kodekab) %>%
arrange(tahun) %>%
mutate(trend = tahun - 2010) %>%
ungroup()
# ===============================================
# 5. Jadikan tsibble (pakai trend buatan)
# ===============================================
data_ts1 <- data_long1 %>%
as_tsibble(key = kodekab, index = tahun)
# ===============================================
# 7. Model Linier dengan trend manual
# ===============================================
model_lm1 <- data_ts1 %>%
model(linier = TSLM(kepadatan ~ trend))
# ===============================================
# 8. Prediksi 2021–2024
# ===============================================
# Bangun data prediksi
future_data_temp1 <- data_ts1 %>%
group_by(kodekab) %>%
summarise(
last_tahun = max(tahun),
last_trend = max(trend),
.groups = "drop"
) %>%
rowwise() %>%
mutate(forecast = list(tibble(
tahun_prediksi = last_tahun + 1:4,
trend = last_trend + 1:4
))) %>%
unnest(forecast) %>%
select(kodekab, tahun = tahun_prediksi, trend)
# Pastikan tidak ada duplikat
future_data1 <- future_data_temp1 %>%
distinct(kodekab, tahun, .keep_all = TRUE) %>%
as_tsibble(key = kodekab, index = tahun)
forecast_lm1 <- forecast(model_lm1, new_data = future_data1)
# ===============================================
# 9. Simpan ke Excel
# ===============================================
hasil_prediksi_wide <- forecast_lm1 %>%
as_tibble() %>%
filter(tahun >= 2021) %>%
select(kodekab, tahun, prediksi = .mean) %>%
pivot_wider(
names_from = tahun,
values_from = prediksi
)
write_xlsx(hasil_prediksi_wide, "C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/prediksi_kepadatan_2021_2024.xlsx")
#future_data1 %>% count(tahun)
#forecast_lm1 %>% count(tahun)
data_long1 %>% filter(tahun == 2011) %>% nrow()
#future_data1 %>% count(tahun)
forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
#future_data1 %>% count(tahun)
forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
future_data1 %>% count(tahun)
forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
#future_data1 %>% count(tahun)
#forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
#future_data1 %>% count(tahun)
#forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
data_long1 %>% count(tahun)
data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
rm(list = ls())
gc()
# ================================================
# 1. Install & load package
# ================================================
library(readxl)
library(tidyverse)
library(tsibble)
library(fable)
library(writexl)
# ================================================
# 2. Baca data dari file Excel
# ================================================
data_wide <- read_excel("C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/kepadatan pendudukk.xlsx")
# ===============================================
# 3. Ubah Format Wide ke Long
# ===============================================
data_long1 <- data_wide %>%
pivot_longer(
cols = c("2011_mean", "2012_mean", "2013_mean", "2014_mean", "2015_mean",
"2016_mean", "2017_mean", "2018_mean", "2019_mean", "2020_mean"),
names_to = "tahun",
values_to = "kepadatan"
) %>%
mutate(
tahun = as.integer(str_remove(tahun, "_mean"))
)
# ===============================================
# 4. Tambahkan Kolom trend Manual
# ===============================================
data_long1 <- data_long1 %>%
group_by(kodekab) %>%
arrange(tahun) %>%
mutate(trend = tahun - 2010) %>%
ungroup()
# ===============================================
# 5. Jadikan tsibble (pakai trend buatan)
# ===============================================
data_ts1 <- data_long1 %>%
as_tsibble(key = kodekab, index = tahun)
# ===============================================
# 7. Model Linier dengan trend manual
# ===============================================
model_lm1 <- data_ts1 %>%
model(linier = TSLM(kepadatan ~ trend))
# ===============================================
# 8. Prediksi 2021–2024
# ===============================================
# Bangun data prediksi
future_data_temp1 <- data_ts1 %>%
group_by(kodekab) %>%
summarise(
last_tahun = max(tahun),
last_trend = max(trend),
.groups = "drop"
) %>%
rowwise() %>%
mutate(forecast = list(tibble(
tahun_prediksi = last_tahun + 1:4,
trend = last_trend + 1:4
))) %>%
unnest(forecast) %>%
select(kodekab, tahun = tahun_prediksi, trend)
# Pastikan tidak ada duplikat
future_data1 <- future_data_temp1 %>%
distinct(kodekab, tahun, .keep_all = TRUE) %>%
as_tsibble(key = kodekab, index = tahun)
forecast_lm1 <- forecast(model_lm1, new_data = future_data1)
# ===============================================
# 9. Simpan ke Excel
# ===============================================
hasil_prediksi_wide <- forecast_lm1 %>%
as_tibble() %>%
filter(tahun >= 2021) %>%
select(kodekab, tahun, prediksi = .mean) %>%
pivot_wider(
names_from = tahun,
values_from = prediksi
)
write_xlsx(hasil_prediksi_wide, "C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/prediksi_kepadatan_2021_2024.xlsx")
#future_data1 %>% count(tahun)
forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
#data_long1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
future_data1 %>% count(tahun)
#forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
#data_long1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
#future_data1 %>% count(tahun)
#forecast_lm1 %>% count(tahun)
data_long1 %>% filter(tahun == 2011) %>% nrow()
#data_long1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
rm(list = ls())
gc()
# ================================================
# 1. Install & load package
# ================================================
library(readxl)
library(tidyverse)
library(tsibble)
library(fable)
library(writexl)
# ================================================
# 2. Baca data dari file Excel
# ================================================
data_wide <- read_excel("C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/kepadatan pendudukk.xlsx")
# ===============================================
# 3. Ubah Format Wide ke Long
# ===============================================
data_long1 <- data_wide %>%
pivot_longer(
cols = c("2011_mean", "2012_mean", "2013_mean", "2014_mean", "2015_mean",
"2016_mean", "2017_mean", "2018_mean", "2019_mean", "2020_mean"),
names_to = "tahun",
values_to = "kepadatan"
) %>%
mutate(
tahun = as.integer(str_remove(tahun, "_mean"))
)
# ===============================================
# 4. Tambahkan Kolom trend Manual
# ===============================================
data_long1 <- data_long1 %>%
group_by(kodekab) %>%
arrange(tahun) %>%
mutate(trend = tahun - 2010) %>%
ungroup()
# ===============================================
# 5. Jadikan tsibble (pakai trend buatan)
# ===============================================
data_ts1 <- data_long1 %>%
as_tsibble(key = kodekab, index = tahun)
# ===============================================
# 7. Model Linier dengan trend manual
# ===============================================
model_lm1 <- data_ts1 %>%
model(linier = TSLM(kepadatan ~ trend))
# ===============================================
# 8. Prediksi 2021–2024
# ===============================================
# Bangun data prediksi
future_data_temp1 <- data_ts1 %>%
group_by(kodekab) %>%
summarise(
last_tahun = max(tahun),
last_trend = max(trend),
.groups = "drop"
) %>%
rowwise() %>%
mutate(forecast = list(tibble(
tahun_prediksi = last_tahun + 1:4,
trend = last_trend + 1:4
))) %>%
unnest(forecast) %>%
select(kodekab, tahun = tahun_prediksi, trend)
# Pastikan tidak ada duplikat
future_data1 <- future_data_temp1 %>%
distinct(kodekab, tahun, .keep_all = TRUE) %>%
as_tsibble(key = kodekab, index = tahun)
forecast_lm1 <- forecast(model_lm1, new_data = future_data1)
# ===============================================
# 9. Simpan ke Excel
# ===============================================
hasil_prediksi_wide <- forecast_lm1 %>%
as_tibble() %>%
filter(tahun >= 2021) %>%
select(kodekab, tahun, prediksi = .mean) %>%
pivot_wider(
names_from = tahun,
values_from = prediksi
)
write_xlsx(hasil_prediksi_wide, "C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/prediksi_kepadatan_2021_2024.xlsx")
rm(list = ls())
gc()
# ================================================
# 1. Install & load package
# ================================================
library(readxl)
library(tidyverse)
library(tsibble)
library(fable)
library(writexl)
# ================================================
# 2. Baca data dari file Excel
# ================================================
data_wide <- read_excel("C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/kepadatan pendudukk.xlsx")
# ===============================================
# 3. Ubah Format Wide ke Long
# ===============================================
data_long1 <- data_wide %>%
pivot_longer(
cols = c("2011_mean", "2012_mean", "2013_mean", "2014_mean", "2015_mean",
"2016_mean", "2017_mean", "2018_mean", "2019_mean", "2020_mean"),
names_to = "tahun",
values_to = "kepadatan"
) %>%
mutate(
tahun = as.integer(str_remove(tahun, "_mean"))
)
# ===============================================
# 4. Tambahkan Kolom trend Manual
# ===============================================
data_long1 <- data_long1 %>%
group_by(kodekab) %>%
arrange(tahun) %>%
mutate(trend = tahun - 2010) %>%
ungroup()
# ===============================================
# 5. Jadikan tsibble (pakai trend buatan)
# ===============================================
data_ts1 <- data_long1 %>%
as_tsibble(key = kodekab, index = tahun)
# ===============================================
# 7. Model Linier dengan trend manual
# ===============================================
model_lm1 <- data_ts1 %>%
model(linier = TSLM(kepadatan ~ trend))
# ===============================================
# 8. Prediksi 2021–2024
# ===============================================
# Bangun data prediksi
future_data_temp1 <- data_ts1 %>%
group_by(kodekab) %>%
summarise(
last_tahun = max(tahun),
last_trend = max(trend),
.groups = "drop"
) %>%
rowwise() %>%
mutate(forecast = list(tibble(
tahun_prediksi = last_tahun + 1:4,
trend = last_trend + 1:4
))) %>%
unnest(forecast) %>%
select(kodekab, tahun = tahun_prediksi, trend)
# Pastikan tidak ada duplikat
future_data1 <- future_data_temp1 %>%
distinct(kodekab, tahun, .keep_all = TRUE) %>%
as_tsibble(key = kodekab, index = tahun)
forecast_lm1 <- forecast(model_lm1, new_data = future_data1)
# ===============================================
# 9. Simpan ke Excel
# ===============================================
hasil_prediksi_wide <- forecast_lm1 %>%
as_tibble() %>%
filter(tahun >= 2021) %>%
select(kodekab, tahun, prediksi = .mean) %>%
pivot_wider(
names_from = tahun,
values_from = prediksi
)
write_xlsx(hasil_prediksi_wide, "C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/prediksi_kepadatan_2021_2024.xlsx")
#future_data1 %>% count(tahun)
forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
#data_long1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
future_data1 %>% count(tahun)
#forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
#data_long1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
#future_data1 %>% count(tahun)
#forecast_lm1 %>% count(tahun)
data_long1 %>% filter(tahun == 2011) %>% nrow()
#data_long1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
rm(list = ls())
gc()
# ================================================
# 1. Install & load package
# ================================================
library(readxl)
library(tidyverse)
library(tsibble)
library(fable)
library(writexl)
# ================================================
# 2. Baca data dari file Excel
# ================================================
data_wide <- read_excel("C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/kepadatan pendudukk.xlsx")
# ===============================================
# 3. Ubah Format Wide ke Long
# ===============================================
data_long1 <- data_wide %>%
pivot_longer(
cols = c("2011_mean", "2012_mean", "2013_mean", "2014_mean", "2015_mean",
"2016_mean", "2017_mean", "2018_mean", "2019_mean", "2020_mean"),
names_to = "tahun",
values_to = "kepadatan"
) %>%
mutate(
tahun = as.integer(str_remove(tahun, "_mean"))
)
# ===============================================
# 4. Tambahkan Kolom trend Manual
# ===============================================
data_long1 <- data_long1 %>%
group_by(kodekab) %>%
arrange(tahun) %>%
mutate(trend = tahun - 2010) %>%
ungroup()
# ===============================================
# 5. Jadikan tsibble (pakai trend buatan)
# ===============================================
data_ts1 <- data_long1 %>%
as_tsibble(key = kodekab, index = tahun)
# ===============================================
# 7. Model Linier dengan trend manual
# ===============================================
model_lm1 <- data_ts1 %>%
model(linier = TSLM(kepadatan ~ trend))
# ===============================================
# 8. Prediksi 2021–2024
# ===============================================
# Bangun data prediksi
# Hitung future_data1 dengan trend = tahun - 2010
future_data1 <- data_ts1 %>%
distinct(kodekab) %>%
mutate(
tahun = list(2021:2024),
trend = list(11:14)
) %>%
unnest(c(tahun, trend)) %>%
as_tsibble(key = kodekab, index = tahun)
forecast_lm1 <- forecast(model_lm1, new_data = future_data1)
# ===============================================
# 9. Simpan ke Excel
# ===============================================
hasil_prediksi_wide <- forecast_lm1 %>%
as_tibble() %>%
filter(tahun >= 2021) %>%
select(kodekab, tahun, prediksi = .mean) %>%
pivot_wider(
names_from = tahun,
values_from = prediksi
)
write_xlsx(hasil_prediksi_wide, "C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/prediksi_kepadatan_2021_2024.xlsx")
#future_data1 %>% count(tahun)
forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
#data_long1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
future_data1 %>% count(tahun)
#forecast_lm1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% nrow()
#data_long1 %>% count(tahun)
#data_long1 %>% filter(tahun == 2011) %>% summarise(non_na = sum(!is.na(kepadatan)))
install.packages("pak")
install.packages("fastmap")
library(shiny); runApp('C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/Project/UHI_Dashboard/UHI_Dashboard/App_.R')
library(haven)
# Data dari Tabel 14.1: Harga dan Volume Penjualan
data_14.1 <- "C:/Users/anggi/Downloads/14.1.sav"
df_double_log <- read_sav(data_14.1)
# Transformasi variabel X dan Y
df_double_log$ln_Volume <- log(df_double_log$Y)
df_double_log$ln_Harga <- log(df_double_log$X)
# Data dari Tabel 14.1: Harga dan Volume Penjualan
data_14.1 <- "C:/Users/anggi/Downloads/14.1.sav"
df_double_log <- read_sav(data_14.1)
# Transformasi variabel X dan Y
df_double_log$ln_Volume <- log(df_double_log$Y)
df_double_log$ln_Harga <- log(df_double_log$X)
# Menjalankan model regresi linear
model_double_log <- lm(ln_Volume ~ ln_Harga, data = df_double_log)
# Menampilkan ringkasan hasil
summary(model_double_log)
# Data dari Tabel 14.2: PDB Indonesia 2000-2014
data_14.2 <- "D:/Kuliah/Semester 4/Analisis Regresi/Pertemuan 14/14.2.sav"
df_log_lin <- read_sav(data_14.2)
# Data dari Tabel 14.2: PDB Indonesia 2000-2014
data_14.2 <- "C:/Users/anggi/Downloads/14.2.sav"
df_log_lin <- read_sav(data_14.2)
# Transformasi variabel Y
df_log_lin$ln_PDB <- log(df_log_lin$Y)
# Menjalankan model regresi linear
model_log_lin <- lm(ln_PDB ~ t, data = df_log_lin)
# Tampilkan hasilnya
summary(model_log_lin)
# Data dari Tabel 14.3: Pengeluaran Rumah Tangga
data_14.3 <- "C:/Users/anggi/Downloads/14.3.sav"
df_lin_log <- read_sav(data_14.3)
names(df_lin_log)
# Meregresikan proporsi pengeluaran (sfdho) terhadap log pengeluaran total (lnexpend)
model_lin_log <- lm(sfdho ~ lnexpend, data = df_lin_log)
# Menampilkan ringkasan hasil
summary(model_lin_log)
library(haven)
data1 <- read_sav("C:/Users/anggi/Downloads/T14.1.sav")
# Transformasi variabel Y
data1$ln_Produksi <- log(data1$Q)
# Transformasi variabel Y
data1$ln_Produksi <- log(data1$Q)
# Menjalankan model regresi linear
model_log_lin <- lm(ln_Produksi ~ t, data = data1)
# Tampilkan hasilnya
summary(model_log_lin)
library(haven)
data2 <- read_sav("C:/Users/anggi/Downloads/T14.2.sav")
library(haven)
data2 <- read_sav("C:/Users/anggi/Downloads/T14.2.sav")
View(data2)
library(haven)
data1 <- read_sav("C:/Users/anggi/Downloads/T14.1.sav")
View(data1)
# Transformasi variabel X dan Y
data2$ln_Q <- log(data2$Q)
data2$ln_C <- log(data2$C)
data2$ln_L <- log(data2$L)
# Menjalankan model regresi linier
model_double_log <- lm(ln_Q ~ ln_C + ln_L, data = data2)
# Menampilkan ringkasan hasil
summary(model_double_log)
library(haven)
data3 <- read_sav("C:/Users/anggi/Downloads/T14.3.sav")
View(data3)
library(haven)
data4 <- read_sav("C:/Users/anggi/Downloads/14.3.sav")
View(data4)
# Y proporsi = Y / X
data3$Y_proporsi <- data3$Y / data3$X
# Transformasi variabel X
data3$ln_X <- log(data3$X)
# Menjalankan model regresi linier
model_lin_log <- lm(Y_proporsi ~ ln_X, data = data3)
# Menampilkan ringkasan hasil
summary(model_lin_log)
shiny::runApp('C:/Users/anggi/Documents/KULIAH/TINGKAT 2/SEMESTER 4/KomStat/UHI_Dashboard/UHI_Dashboard')
